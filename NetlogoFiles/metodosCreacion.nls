to crearPersonas
  create-personas numero-personas
    [ setxy 0  0
      set edad 0
      set tiempo-infectado 0
      set restante-serInmune 0
      set shape "person"
      set size 1  ;;tamano del shape
      set estacionCercana nobody
      set lugarPosicion "casa"
      set irAEstacion? false
      set confinado? false
      set volverACasa? false
      set alTrabajo? false
      set enCasa? true
      set vehiculoPropio? false
      set irAlVehiculo? false
      set infeccioso? false
      set asintomatica? false
      set tiempoInternoLatencia tiempoLatencia * 24 * 60
      set tiempoPromedioViajeAlTrabajo getTiempoPromedioViaje
      set tiempoPromedioViajeACasa getTiempoPromedioViaje
      set aleatorioProbabilidaInfectar 0
      set aleatorioProbabilidadMorir 0
      set aleatorioProbabilidaContacto 0
      set lugarPosicion "casa"
      set lugarInfeccion ""
      set nivelEnfermedad "ninguno"
      get-saludable
      set contacto_otros 0
      set muerto false
      set sexo 0
      set ocupacion 0 
    ]
end

to crearVehiculos
  let numeroVehiculos count personas with [vehiculoPropio? = true]
  create-vehiculos numeroVehiculos [
    setxy random ((-30) - (-20)) + (-20) random 10
    set shape "car"
    set color white
  ]

end

to crearPersonasConVehiculoPropio
  let personasVehiculoPropio 0
  ask personas [
    if (%vehiculoPropio * count personas / 100)  > personasVehiculoPropio [
      set vehiculoPropio? true 
      set irAlVehiculo? true 
      set irAEstacion? false
      set personasVehiculoPropio personasVehiculoPropio + 1
    ]
  ]
end

to crearCasasConfinamiento
  let listaCoordenadasCasas []
  let personasConfinadas 0
  ask personas [
    set listaCoordenadasCasas lput coordenadaCasa listaCoordenadasCasas
    ifelse %confinamiento > 0   
    [
      if (%confinamiento * count personas / 100)  > personasConfinadas 
      [
        set confinado? true
        set personasConfinadas personasConfinadas + 1
      ]
    ]
    
    [
      if ocupacion = "estudiante" [confinamientPorOcupacion %confinamientoEstudiantes]
      if ocupacion = "trabajador" [confinamientPorOcupacion %confinamientoTrabajadores]
      if ocupacion = "jubilado" [confinamientPorOcupacion %confinamientoJubilados]
    ]
  ]

  
  foreach listaCoordenadasCasas [ tuplaCoordenadasCasa ->
    create-casas 1 [
      setxy item 0 tuplaCoordenadasCasa item 1 tuplaCoordenadasCasa
      set shape "house efficiency"
      set color white
      set size 1.5
    ]
  ]
end

to confinamientPorOcupacion [%confinamientoPersona]
  let porcentajeOcupacionNoConfinado count personas with [ ocupacion = ocupacion and confinado? = true] / count personas with [ocupacion = ocupacion] * 100
  if porcentajeOcupacionNoConfinado < %confinamientoPersona
  [
    set confinado? true
  ]  
end

to crearLugares
  let listaCoordenadasLugares (list (list -6 12) (list 6 -12) (list -12 6) (list 12 -6) (list 6 12)  (list -6 -12) (list -12 -6) (list 12 6))
  let listaShapesLugares (list "building store" "factory")
  foreach listaCoordenadasLugares [ coordenadaLugar ->
    create-lugares 1 [
      setxy item 0 coordenadaLugar item 1 coordenadaLugar
      set shape one-of listaShapesLugares
      set size 2  ;;tamano del shape
      set color yellow
    ]
  ]
end

to crearEstaciones
  let listaCoordenadasEstaciones (list (list 12 12) (list 12 -12) (list -12 12) (list -12 -12) )
  foreach listaCoordenadasEstaciones [ coordenadaEstacion ->
    create-buses 1 [
      setxy item 0 coordenadaEstacion item 1 coordenadaEstacion
      set shape "bus"
      set size 2  ;;tamano del shape
      set color blue
    ]
  ]
end

to crearHospital
  create-hospitales 1 [
    setxy 0 0
    set shape "hospital"
    set size 5
    set label numeroCamasUCI
  ]
end

to crearCementerio
  create-cementerios 1 [
    setxy 0 30
    set shape "cemetery"
    set size 4
    set color grey
    set label muertos
  ]
end