;; Funcion para distribuir las personas en diferentes casas, en la casa pueden habitar maximo 2 personas
;; se llama a la distribucion por estrato y por edad
to distribuirEnCasasYVehiculos
  let listaVehiculosPropios [self] of vehiculos
  let iterador 0
  ask personas [
    if vehiculoPropio? and iterador < length listaVehiculosPropios
    [
      let vehiculoPropio item iterador listaVehiculosPropios
      set coordenadaVehiculo list [xcor] of vehiculoPropio [ycor] of vehiculoPropio
      set iterador iterador + 1
    ]

    let listaXY getValoresXYporArea
    setxy (item 0 listaXY)  (item 1 listaXY)
    while [count personas-here > 2]
    [
      set listaXY getValoresXYporArea
      setxy (item 0 listaXY)  (item 1 listaXY)
    ]
    set coordenadaCasa listaXY

    distribuirPoblacionEstrato
    distribuirPoblacionPorEdad
    distribuirPoblacionPorSexo

  ]
end

to distribuirPoblacionEstrato
  let porcentajeSinEstrato count personas with [ estratoSocial = 0 ] / count personas * 100

  ifelse porcentajeSinEstrato = 100 or porcentajeSinEstrato > 98.4
  [set estratoSocial 6]
  [ifelse porcentajeSinEstrato > 95.4
    [set estratoSocial 5]
    [ifelse porcentajeSinEstrato > 85
      [set estratoSocial 4]
      [ifelse porcentajeSinEstrato > 49.4
        [set estratoSocial 3]
        [ifelse porcentajeSinEstrato > 9.1
          [set estratoSocial 2]
          [set estratoSocial 1]
        ]
      ]
    ]
  ]
end


to distribuirPoblacionPorEdad
  let porcentajeSinEdad count personas with [ edad = 0 ] / count personas * 100

  ifelse porcentajeSinEdad = 100 or porcentajeSinEdad > 90.9
  [set edad (random (75 - 65) + 65) * variableEdad ]
    [ifelse porcentajeSinEdad > 22.6
      [set edad (random (64 - 15) + 15) * variableEdad ]
      [set edad (random (14 - 1) + 1) * variableEdad]
    ]
end

to distribuirPoblacionPorSexo
  let porcentajeSinSexo count personas with [ sexo = 0 ] / count personas * 100

  ifelse porcentajeSinSexo = 100 or porcentajeSinSexo > 51.2
  [set sexo "hombre"]
  [set sexo "mujer"]
end